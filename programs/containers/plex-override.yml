#!/bin/bash
#
# Version:  Ansible-1
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   Admin9705 & Deiteq
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
############################################################# (KEY START)
---
- name: Check Preferences.xml exists
  stat:
    path: "/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml"
  register: plex_prefs

############### This is needed because on a fresh installaions the value is missins and is defaulted to 1 Security perfered
- name: secureConnections is missing
  xml:
    path: "/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml"
    xpath: /Preferences/@secureConnections
    count: yes
  register: secure_hits
  when:
    - plex_prefs.stat.exists

 ############### This is needed because on a fresh installaions the value is missins and is defaulted to 1 Security perfered
- name: Add secureConnections if missing
  xml:
    path: "/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml"
    xpath: /Preferences
    attribute: secureConnections
    value: '1'
  when:
    - plex_prefs.stat.exists
    - secure_hits.count == 0

- name: Read Preferences.xml
  xml:
    path: "/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml"
    xpath: /Preferences
    content: attribute
  register: plex_pref_content
  when: plex_prefs.stat.exists

- name: Add https to default_label if secureConnection != 2
  set_fact:
    default_labels: "{{default_labels | combine( {'traefik.protocol': 'https'} )}}"
  when:
    - plex_prefs.stat.exists
    - plex_pref_content.matches[0]['Preferences']['secureConnections']

- name: Read customConnections
  set_fact:
    customConnections: "{{plex_pref_content.matches[0]['Preferences']['customConnections']}}"
  when:
    - plex_prefs.stat.exists
    - plex_pref_content.matches[0]['Preferences']['customConnections'] is defined

- name: customConnections missing
  set_fact:
    customConnections: "http://{{ipaddress.stdout}}:32400"
  when:
    - plex_prefs.stat.exists == False

- name: "Get Plex Custom URL"
  shell: "echo https://plex.{{domain.stdout}}:443,http://plex.{{domain.stdout}}:80"
  register: plex_url
  when: usercheck != "2"

- debug: msg="Your plex_url is {{ plex_url.stdout }}"
  when: usercheck != "2"

- set_fact:
      plex_advert_ip: "http://{{ipaddress.stdout}}:32400"
  when: usercheck != "2"

- set_fact:
      plex_advert_ip: "{{plex_url.stdout}}"
  when: usercheck != "2"

- debug: msg="plex_advert_ip is {{plex_advert_ip}}"
  when: usercheck != "2"

- name: Check /dev/dri exists
  stat:
    path: "/dev/dri"
  register: dev_dri

- name: Create Transcodes Directory
  file: "path={{item}} state=directory mode=0775 owner=1000 group=1000"
  with_items:
      - /opt/transcodes

- name: customConnections FailSafe
  set_fact:
    customConnections: "none"
  when: customConnections is undefined
######################################### DEPLOY PLEX REMOTE (ANSWER 2)
- name: Deploy Plex Container (Remote Edition)
  docker_container:
    name: plex
    image: "plexinc/pms-docker:{{plextype}}"
    pull: yes
    published_ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
      - "33400:33400/tcp"
      - "33443:33443/tcp"
    env:
      PLEX_UID: "1000"
      PLEX_GID: "1000"
      PLEX_CLAIM: "{{ptoken}}"
      ADVERTISE_IP: "{{customConnections}}"
    purge_networks: yes
    networks:
      - name: plexguide
        aliases:
          - plex
    expose:
      - 32400
    volumes: "{{default_volumes}}"
    devices: "{{ '/dev/dri:/dev/dri' if dev_dri.stat.exists == True | default(false) else omit }}"
    etc_hosts: {'analytics.plex.tv': '127.0.0.1', 'metrics.plex.tv': '127.0.0.1'}
    #cpu_shares: 1024
    restart_policy: always
    state: started
    labels: "{{default_labels}}"
  when: usercheck != "2"

######################################### DEPLOY PLEX LOCAL (ANSWER 3)
- name: Deploy Plex Container (Local Edition)
  docker_container:
    name: plex
    image: "plexinc/pms-docker:latest"
    pull: yes
    published_ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
      - "33400:33400/tcp"
      - "33443:33443/tcp"
    env:
      PLEX_UID: "1000"
      PLEX_GID: "1000"
      PLEX_CLAIM: "{{ptoken}}"
      ADVERTISE_IP: "{{customConnections}}"
    network_mode: "host"
    volumes: "{{default_volumes}}"
    devices: "{{ '/dev/dri:/dev/dri' if dev_dri.stat.exists == True | default(false) else omit }}"
    etc_hosts: {'analytics.plex.tv': '127.0.0.1', 'metrics.plex.tv': '127.0.0.1'}
    #cpu_shares: 1024
    restart_policy: always
    state: started
    labels: "{{default_labels}}"
  when: usercheck == "2"

######################################## ENDING PHASE
- debug: msg="Final Notes - Remote Plex | IP Address {{ipaddress.stdout}} | Plex Type {{plextype}} | Token {{ptokentemp}}"
  when: usercheck == "1"

- debug: msg="Final Notes - Local Plex | IP Address {{ipaddress.stdout}} | Plex Type {{plextype}}"
  when: usercheck == "2"

- pause:
    prompt: "\n------------------------------------------------------------------------
             \nSystem Message - Claiming the Plex Server (Remote Edition)
             \n------------------------------------------------------------------------
           \n\n1. Visit {{ipaddress.stdout}}:32400/web to claim the plex server
           \n\n2. PLEX Wizard Works: Continue to the next step
             \n   PLEX Wizard Fails:
             \n   a. Select [Server Names]
             \n   b. Look for an oddball server name(example): dd8c78459a6f
          \n\n3. a. Visit Settings > Server > Remote Access
             \n   b. Click [Show Advanced] > [Enable]
             \n   c. Check [Manually Specify Public Port] > Type Port 32400 > [Retry]
             \n   d. Click [Save Changes]
          \n\n4. If enabled and fails, refresh or test using a second device!
          \n\nNOTE: Failing to follow directions will result in INDIRECT connections!
             \nPress [ENTER] after you CONFIRM"
  when: usercheck == "1"

- pause:
    prompt: "\n------------------------------------------------------------------------
             \nSystem Message - Claiming the Plex Server (Local Edition)
             \n------------------------------------------------------------------------
           \n\n1. Visit {{ipaddress.stdout}}:32400/web or http://127.0.0.1:32400/web
           \n\n2. PLEX Wizard Works: Your Set!
             \n   PLEX Wizard Fails:
             \n   a. You should see a warning banner about an unclaimed server!
             \n   b. Check your server list for a new server!
           \n\n3. Remote Access Failure Reasons (Optional - Only If Sharing):
             \n   a. Router  : UPnP on your router is turned off!
             \n   b. Router  : Double NAT issue; your network and/or ISP setup
             \n   c. Firewall: Turn them all off for TESTING purposes (turn on later)
          \n\nNOTE: If Remote Access Continues to Fail, check with PLEX Forums!
             \nPress [ENTER] after you CONFIRM"
  when: usercheck == "2"
